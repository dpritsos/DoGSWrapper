
import numpy as np
import numpy.linalg as alg
import scipy.spatial.distance as spd


d = np.array([
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4], 
	[.4,.6,.5,.3,.9,.8,.7,.8,.8,.4,.1,.1,.1,.1,.1,.1,.5,.8,.4],[.4,.6,.1,.6,.9,.8,.7,.8,.8,.4,.1,.0,.9,.7,.7,.1,.7,.8,.4],[.1,.6,.4,.6,.9,.8,.7,.1,.3,.4,.1,.0,.9,.7,.7,.1,.7,.1,.4],\


])

t = [.1,.1,.1,.3,.1,.1,.1,.8,.1,.1,.1,.1,.1,.1,.1,.1,.5,.8,.4]

incov = alg.pinv( np.cov(d) )

m = np.mean(d)

S = incov

l = np.matrix(t - m)

r = np.matrix(t - m).T

#print incov
#print alg.pinv( np.cov(d) )
print alg.svd(d)
#print l

print l*S

print spd.mahalanobis(t,m,incov)


